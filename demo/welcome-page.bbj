style! = "
: body,html {overflow: hidden}
: h3 {margin: var(--bbj-space-m) 0}
: .bbj-toolbar {
:    display: flex;
:    align-items: center;
:    gap: var(--bbj-space-m);
:    padding: 0 var(--bbj-space-m);
: }
:
: bbj-drawer::part(header){
:   display: none;
: }
:
: .bbj-logo {
:    display: flex;
:    align-items: center;
:    justify-content: center;
:    padding: var(--bbj-space-m) 0;
:    margin-bottom: var(--bbj-space-m);
:    border-bottom: thin solid var(--bbj-color-default)
: }
:
: .bbj-logo img {
:    max-width: 100px;
: }
:
: .welcome-page {
:    display: flex;
:    flex-direction: column;
:    align-items: center;
:    justify-content: center;
:    padding: var(--bbj-space-2xl);
:    width: 100%;
: }
:
: .welcome-page img {
:    max-height: 300px;
: }
:
: .welcome-page p {
:    text-align: center;
: }
:"

use ::BBjAppLayout/BBjAppLayout.bbj::BBjAppLayout
use ::BBjDrawer/BBjDrawer.bbj::BBjDrawer

web! = BBjAPI().getWebManager()
rem The app should include a viewport meta tag which contains `viewport-fit=cover`, like the following.
rem This causes the viewport to be scaled to fill the device display.
web!.setMeta("viewport", "width=device-width, initial-scale=1.0, viewport-fit=cover, user-scalable=no")
web!.injectStyle(style!, 0)

sysgui! =  BBjAPI().openSysGui("X0")

declare auto BBjWindow wnd! 
wnd! = sysgui!.addWindow("BBjDrawer", $01001000$)
wnd!.setCallback(BBjAPI.ON_CLOSE,"eoj")

declare auto BBjAppLayout app! 
app! = new BBjAppLayout(wnd!)

rem Header
rem ==================
declare auto BBjChildWindow header! 
header! = app!.getHeader()

declare auto BBjChildWindow toolbar! 
toolbar! = header!.addChildWindow("", $00108800$, sysgui!.getAvailableContext())
toolbar!.addStyle("bbj-toolbar")
toolbar!.addStaticText("<html><bbj-icon-button name='menu-2' data-drawer-toggle></bbj-icon-button></html>")
toolbar!.addStaticText("<html><h3>DWC Application</h3></html>")

rem Drawer
rem ==================
declare auto BBjChildWindow drawer! 
drawer! = app!.getDrawer()
drawer!.addStyle("bbj-drawer")

declare auto BBjImageCtrl logo! 
logo! = drawer!.addImageCtrl("./assets/logo.png")
logo!.addStyle("bbj-logo")

declare auto BBjTabCtrl drawerMenu! 
drawerMenu! = drawer!.addTabCtrl()
drawerMenu!.setCallback(drawerMenu!.ON_TAB_SELECT,"onPageChanged")
drawerMenu!.setAttribute("nobody","true")
drawerMenu!.setAttribute("borderless","true")
drawerMenu!.setAttribute("placement","left")
drawerMenu!.addTab("<bbj-icon name='dashboard'></bbj-icon>      Dashboard"    , -1)
drawerMenu!.addTab("<bbj-icon name='shopping-cart'></bbj-icon>  Orders"       , -1)
drawerMenu!.addTab("<bbj-icon name='users'></bbj-icon>          Customers"    , -1)
drawerMenu!.addTab("<bbj-icon name='box'></bbj-icon>            Products"     , -1)
drawerMenu!.addTab("<bbj-icon name='files'></bbj-icon>          Documents"    , -1)
drawerMenu!.addTab("<bbj-icon name='checklist'></bbj-icon>      Tasks"        , -1)
drawerMenu!.addTab("<bbj-icon name='chart-dots-2'></bbj-icon>   Analytics"    , -1)

rem Content
rem ==================
declare auto BBjChildWindow content! 
content! = app!.getContent()
content!.addStaticText("<html><h1>Application Title</h1></html>")
pageContent! = content!.addStaticText("<html><p>Content for Dashboard goes here</p></html>")

btn! = content!.addButton("Open Welcome Page")
btn!.setCallback(BBjAPI.ON_BUTTON_PUSH,"toggleDrawer")

rem Welcome Page
rem ==================
declare auto BBjDrawer welcomePage!
welcomePage! = new BBjDrawer(wnd!)
welcomePage!.setPlacement(BBjDrawer.PLACEMENT_BOTTOM_CENTER)
welcomePage!.setSize("90vh")

declare auto BBjChildWindow content! 
content! = welcomePage!.getContent()
content!.addStyle("welcome-page")
content!.addImageCtrl("./assets/fun.svg")
content!.addStaticText("<html><h2>Welcome to DWC</h2></html>")
content!.addStaticText("<html><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p></html>")
btn! = content!.addButton("Get Started")
btn!.setCallback(BBjAPI.ON_BUTTON_PUSH,"toggleDrawer")
btn!.setAttribute("theme","primary")
btn!.setAttribute("expanse","l")

wait 1
welcomePage!.open()

process_events

onPageChanged:
  event! = sysgui!.getLastEvent() 
  title$ = event!.getTitle().replaceAll("<[^>]*>","").trim()

  pageContent!.setText("<html><p>Content for " + title$ + " goes here</p></html>")
return

toggleDrawer:
  welcomePage!.toggle()
return

eoj:
release
